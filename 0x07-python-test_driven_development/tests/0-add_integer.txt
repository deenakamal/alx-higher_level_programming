===========================
How to Use 0-add_integer.py
===========================

Usage
=====

This module used to defines an integer addiction function called
''add_integer()''

::

    >>> add_integer = __import__('0-add_integer').add_integer
    >>> add_integer(2, 3)
    5

::

    >>> add_integer(2, -3)
    -1

::

    >>> add_integer(2.0, 3.0)
    5

::

    >>> add_integer(2.9, 0.2)
    2

::

    >>> add_integer(-2.9, -0.2)
    -2

::

    >>> add_integer(2.3, -3)
    -1

::

    >>> add_integer(2)
    100

Nom-Numbers
===========
''add_integer()'' test if one of the variable not integer
::

    >>> add_integer('str', 2.0)
    Traceback (most recent call last):
    TypeError: a must be an integer

::

    >>> add_integer(3, [1, 'p', 7])
    Traceback (most recent call last):
    TypeError: b must be an integer

::

    >>> add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer

::

    >>> add_integer(float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

::

    >>> add_integer(4.0, float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

::

    >>> add_integer(float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer
